diff '--color=auto' -ur onnxruntime-1.20.0.orig/cmake/external/onnxruntime_external_deps.cmake onnxruntime-1.20.0/cmake/external/onnxruntime_external_deps.cmake
--- onnxruntime-1.20.0.orig/cmake/external/onnxruntime_external_deps.cmake	2024-11-01 21:52:14.820270816 +0100
+++ onnxruntime-1.20.0/cmake/external/onnxruntime_external_deps.cmake	2024-11-01 21:54:40.264517620 +0100
@@ -91,24 +91,10 @@
 endif()
 
 if (NOT WIN32)
-  FetchContent_Declare(
-    google_nsync
-    URL ${DEP_URL_google_nsync}
-    URL_HASH SHA1=${DEP_SHA1_google_nsync}
-    PATCH_COMMAND ${Patch_EXECUTABLE} --binary --ignore-whitespace -p1 < ${PROJECT_SOURCE_DIR}/patches/nsync/nsync_1.26.0.patch
-    FIND_PACKAGE_ARGS NAMES nsync unofficial-nsync
-  )
-  #nsync tests failed on Mac Build
-  set(NSYNC_ENABLE_TESTS OFF CACHE BOOL "" FORCE)
-  onnxruntime_fetchcontent_makeavailable(google_nsync)
-
-  if (google_nsync_SOURCE_DIR)
+  if (NOT TARGET nsync_cpp)
+    add_library(nsync_cpp SHARED IMPORTED GLOBAL)
+    set_property(TARGET nsync_cpp PROPERTY IMPORTED_LOCATION "/usr/${CMAKE_INSTALL_LIBDIR}/libnsync_cpp.so")
     add_library(nsync::nsync_cpp ALIAS nsync_cpp)
-    target_include_directories(nsync_cpp PUBLIC ${google_nsync_SOURCE_DIR}/public)
-  endif()
-  if(TARGET unofficial::nsync::nsync_cpp AND NOT TARGET nsync::nsync_cpp)
-    message(STATUS "Aliasing unofficial::nsync::nsync_cpp to nsync::nsync_cpp")
-    add_library(nsync::nsync_cpp ALIAS unofficial::nsync::nsync_cpp)
   endif()
 endif()
 
Only in onnxruntime-1.20.0/cmake/external: onnxruntime_external_deps.cmake.orig
